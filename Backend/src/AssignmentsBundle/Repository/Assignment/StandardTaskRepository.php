<?php

namespace AssignmentsBundle\Repository\Assignment;

use ApiBundle\Entity\BranchStation;
use ApiBundle\Entity\Role\BranchStationOriginRole;
use AssignmentsBundle\Entity\Assignment\StandardTask;

/**
 * StandardTaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StandardTaskRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAssignmentsByStation(BranchStation $station)
    {
        $result = [];
        foreach($station->getAssignments() as $assignment)
        {
            if($assignment instanceof StandardTask) {
                $result[] = $assignment;
            }
        }
        return $result;
    }

    public function getConfirmationAssignments()
    {
        $now = new \DateTime();
        $today = new \DateTime();
        $today = $today->format('Y-m-d');

        $qb = $this->createQueryBuilder('StandardTask');
        $qb
            ->where('StandardTask.snooze_until IS NULL')
            ->andWhere('StandardTask.start_time IS NOT NULL')
            ->andWhere('StandardTask.end_time IS NOT NULL')
            ->andWhere('StandardTask.working = 1')
            ->andWhere('StandardTask.has_confirmation = 1')
            ->andWhere('DATE(:now) = DATE(StandardTask.start_time)')
            ->andWhere(':now >= StandardTask.start_time')
            ->andWhere(':now <= StandardTask.end_time')
            ->andWhere($qb->expr()->andX(
                'StandardTask.lastSentDate IS NOT NULL',
                'DATE(StandardTask.lastSentDate) = :today'
            ))
            ->setParameter("now", $now)
            ->setParameter("today", $today);

        $query = $qb->getQuery();

        return $query->getResult();
    }
}
