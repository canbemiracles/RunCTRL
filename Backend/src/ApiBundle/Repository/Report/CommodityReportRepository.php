<?php

namespace ApiBundle\Repository\Report;

use ApiBundle\Entity\Branch;
use ApiBundle\Entity\Report\EndOfShiftReport;

/**
 * CommodityReportRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommodityReportRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Get the list reports which were made in shift.
     * @param EndOfShiftReport $report
     * @return mixed
     */
    public function getCommodityReportsByEndOfShiftReport($report) {
        $qb = $this->createQueryBuilder('CommodityReport');
        $qb->where('TIMESTAMPDIFF(second, :created, CommodityReport.created) >= 0 AND TIMESTAMPDIFF(second, CommodityReport.created, :updated) >= 0')
            ->setParameter('created', $report->getCreated())->setParameter('updated', $report->getUpdated());
        $query = $qb->getQuery();
        return $query->getResult();
    }

    /**
     * Get the list reports which were made in together by branch.
     * @param Branch $branch
     * @param $param
     * @return mixed
     */
    public function getCommodityReportByParam(Branch $branch, $param)
    {
        $qb = $this->createQueryBuilder('CommodityReport');

        $qb->innerJoin('CommodityReport.branch_shift', 'bs')
            ->innerJoin('bs.branch', 'b');
        $qb->andWhere('b.id = :branch')->setParameter(':branch', $branch);

        if(!empty($param['date'])) {
            $qb->andWhere('DATE(:date) = DATE(CommodityReport.created)')->setParameter(':date', $param['date']);
        }

        if(!empty($param['branch_station'])) {
            $qb->andWhere(':branch_station = CommodityReport.branch_station')->setParameter(':branch_station', $param['branch_station']);
        }

        $query = $qb->getQuery();
        return $query->getResult();
    }
}
