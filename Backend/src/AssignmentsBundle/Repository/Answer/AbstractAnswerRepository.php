<?php

namespace AssignmentsBundle\Repository\Answer;

use ApiBundle\Entity\Employee;
use AssignmentsBundle\Entity\Assignment\AbstractAssignment;

/**
 * AbstractAnswerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AbstractAnswerRepository extends \Doctrine\ORM\EntityRepository
{
    public function getLastAnswer(AbstractAssignment $assignment)
    {
        $qb = $this->createQueryBuilder('AbstractAnswer');
        $qb
            ->where('AbstractAnswer.assignment = :assignment')
            ->setParameter('assignment', $assignment)
            ->orderBy('AbstractAnswer.created', 'DESC')
            ->setMaxResults(1);
        $query = $qb->getQuery();
        return $query->getOneOrNullResult();
    }
    public function getDoneTasksByEmployee(Employee $employee, $start_date)
    {
        $qb = $this->createQueryBuilder('AbstractAnswer');
        $qb->select('count(AbstractAnswer.id)');
        $qb
            ->where('AbstractAnswer.employee = :employee')
            ->setParameter('employee', $employee)
            ->andWhere('AbstractAnswer.created > TIME(:start_date)')
            ->setParameter('start_date', $start_date)
            ->orderBy('AbstractAnswer.created', 'DESC');
        $query = $qb->getQuery();
        return $query->getSingleScalarResult();
    }

    public function getDoneTasksCurrentMonthByEmployee(Employee $employee)
    {
        $qb = $this->createQueryBuilder('AbstractAnswer');
        $qb->select('count(AbstractAnswer.id)');
        $qb
            ->where('AbstractAnswer.employee = :employee')
            ->setParameter('employee', $employee)
            ->andWhere('MONTH(AbstractAnswer.created) = MONTH(CURRENT_DATE())');
        $query = $qb->getQuery();
        return $query->getSingleScalarResult();
    }
}
