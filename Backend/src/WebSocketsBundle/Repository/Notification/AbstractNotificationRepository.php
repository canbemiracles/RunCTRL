<?php

namespace WebSocketsBundle\Repository\Notification;

use ApiBundle\Entity\User\AbstractUser;
use WebSocketsBundle\Entity\Notification\AlertNotification;
use WebSocketsBundle\Entity\Notification\AnnouncementNotification;
use WebSocketsBundle\Entity\Notification\ReportNotification;

/**
 * AbstractNotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AbstractNotificationRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAllNotificationByUser(AbstractUser $user)
    {
        $qb = $this->createQueryBuilder('Notification');
        $qb->leftJoin(ReportNotification::class, 'ReportNotification', 'WITH', 'ReportNotification.id = Notification.id')
            ->leftJoin('ReportNotification.user', 'ru');
        $qb->leftJoin(AlertNotification::class, 'AlertNotification', 'WITH', 'AlertNotification.id = Notification.id')
            ->leftJoin('AlertNotification.user', 'au');
        $qb->leftJoin(AnnouncementNotification::class, 'AnnouncementNotification', 'WITH', 'AnnouncementNotification.id = Notification.id')
            ->leftJoin('AnnouncementNotification.users', 'anu');

        $qb->orWhere('ReportNotification.user = :user')
            ->orWhere('AlertNotification.user = :user')
            ->orWhere('anu = :user')
            ->setParameter('user', $user);

        $qb->orderBy('Notification.created', 'DESC');

        $query = $qb->getQuery();
        return $query->getResult();
    }
}
